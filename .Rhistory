#   lg2FC = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(24)
# )
anno_cols <- list(
PFS = colorRampPalette(c("navy", "white", "gold"))(24),#viridis(12),#inferno(20),
PDL1 = c(`P` = "limegreen",`N` = "white", `NA` = "white"),
`CD73+`= c(`Y` = "limegreen", `N`="white"),
lg2FC = colorRampPalette(c("navy", "white", "gold"))(25)
#nanostring= c(`Yes` = "limegreen", `NA`="white")
)
table(sample_anno$PFS)
table(sample_anno$PDL1)
table(gene_anno$lg2FC)
# pdf heatmap ----
# all sample ----
heatmap_title <- "RNAseq Platinum-Resistance samples (wilcox.pval<=0.05 & lg2FC>4 | lg2FC<(-4))"
pdf(file="Fig4.2.heatmap_R.pdf",width = 9, height = 15)
p <- pheatmap(log2(mat+1),
scale = "row",
breaks=seq(-3,3,length.out=25),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(24),#viridis(10),#inferno(10),
color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(24),
border_color = NA,
show_rownames = T,
cluster_rows = T,
cutree_rows = 2,
cluster_cols = T,
cutree_cols = 2,
clustering_distance_rows = "euclidean",
#  correlation #"euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
clustering_distance_cols = "euclidean",
clustering_method = "ward.D2",
#  #"complete", 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' or 'centroid'
annotation_col = sample_anno,
annotation_colors = anno_cols,
annotation_row = gene_anno,
#  #drop_levels = TRUE,
main = heatmap_title)
print(p)
dev.off()
pdf(file="Fig4.2.heatmap_R.pdf",width = 9, height = 15)
p <- pheatmap(log2(mat+1),
scale = "row",
breaks=seq(-3,3,length.out=25),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(24),#viridis(10),#inferno(10),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(24),
color = colorRampPalette(c("#2E9FDF", "white", "#E7B800"))(25),
border_color = NA,
show_rownames = T,
cluster_rows = T,
cutree_rows = 2,
cluster_cols = T,
cutree_cols = 2,
clustering_distance_rows = "euclidean",
#  correlation #"euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
clustering_distance_cols = "euclidean",
clustering_method = "ward.D2",
#  #"complete", 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' or 'centroid'
annotation_col = sample_anno,
annotation_colors = anno_cols,
annotation_row = gene_anno,
#  #drop_levels = TRUE,
main = heatmap_title)
print(p)
dev.off()
pdf(file="Fig4.2.heatmap_R.pdf",width = 9, height = 15)
p <- pheatmap(log2(mat+1),
scale = "row",
breaks=seq(-2,2,length.out=25),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(24),#viridis(10),#inferno(10),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(24),
color = colorRampPalette(c("#2E9FDF", "white", "#E7B800"))(25),
border_color = NA,
show_rownames = T,
cluster_rows = T,
cutree_rows = 2,
cluster_cols = T,
cutree_cols = 2,
clustering_distance_rows = "euclidean",
#  correlation #"euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
clustering_distance_cols = "euclidean",
clustering_method = "ward.D2",
#  #"complete", 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' or 'centroid'
annotation_col = sample_anno,
annotation_colors = anno_cols,
annotation_row = gene_anno,
#  #drop_levels = TRUE,
main = heatmap_title)
print(p)
dev.off()
pdf(file="Fig4.heatmap_anno.pdf",width = 9, height = 9)
p <- pheatmap(log2(mat+1),
scale = "row",
breaks=seq(-2,2,length.out=25),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(24),#viridis(10),#inferno(10),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(24),
color = colorRampPalette(c("navy", "white", "yellow"))(25),
#color = colorRampPalette(c("#2E9FDF", "white", "#E7B800"))(25),
border_color = NA,
show_rownames = T,
cluster_rows = T,
cutree_rows = 2,
cluster_cols = T,
cutree_cols = 2,
clustering_distance_rows = "euclidean",
#  correlation #"euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
clustering_distance_cols = "correlation",
clustering_method = "ward.D2",
#  #"complete", 'ward.D', 'ward.D2', 'single','average', 'mcquitty', 'median' or 'centroid'
annotation_col = sample_anno,
annotation_colors = anno_cols,
annotation_row = gene_anno,
#  #drop_levels = TRUE,
main = heatmap_title)
print(p)
dev.off()
p <- pheatmap(log2(mat+1),
scale = "row",
breaks=seq(-2,2,length.out=25),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(24),#viridis(10),#inferno(10),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(24),
color = colorRampPalette(c("navy", "white", "yellow"))(25),
# color = colorRampPalette(c("#2E9FDF", "white", "#E7B800"))(25),
border_color = NA,
show_rownames = T,
cluster_rows = T,
cutree_rows = 2,
cluster_cols = T,
cutree_cols = 2,
clustering_distance_rows = "euclidean",
#  correlation #"euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
clustering_distance_cols = "euclidean",
clustering_method = "ward.D2",
#  #"complete", 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' or 'centroid'
annotation_col = sample_anno,
annotation_colors = anno_cols,
annotation_row = gene_anno,
#  #drop_levels = TRUE,
main = heatmap_title)
pdf(file="Fig4.2.heatmap_R.pdf",width = 9, height = 15)
p <- pheatmap(log2(mat+1),
scale = "row",
breaks=seq(-2,2,length.out=25),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(24),#viridis(10),#inferno(10),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(24),
color = colorRampPalette(c("navy", "white", "yellow"))(25),
# color = colorRampPalette(c("#2E9FDF", "white", "#E7B800"))(25),
border_color = NA,
show_rownames = T,
cluster_rows = T,
cutree_rows = 2,
cluster_cols = T,
cutree_cols = 2,
clustering_distance_rows = "euclidean",
#  correlation #"euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
clustering_distance_cols = "euclidean",
clustering_method = "ward.D2",
#  #"complete", 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' or 'centroid'
annotation_col = sample_anno,
annotation_colors = anno_cols,
annotation_row = gene_anno,
#  #drop_levels = TRUE,
main = heatmap_title)
print(p)
dev.off()
dev.off()
pdf(file="Fig4.2.heatmap_R.pdf",width = 9, height = 15)
p <- pheatmap(log2(mat+1),
scale = "row",
breaks=seq(-2,2,length.out=25),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(24),#viridis(10),#inferno(10),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(24),
color = colorRampPalette(c("navy", "white", "yellow"))(25),
# color = colorRampPalette(c("#2E9FDF", "white", "#E7B800"))(25),
border_color = NA,
show_rownames = T,
cluster_rows = T,
cutree_rows = 2,
cluster_cols = T,
cutree_cols = 2,
clustering_distance_rows = "euclidean",
#  correlation #"euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
clustering_distance_cols = "euclidean",
clustering_method = "ward.D2",
#  #"complete", 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' or 'centroid'
annotation_col = sample_anno,
annotation_colors = anno_cols,
annotation_row = gene_anno,
#  #drop_levels = TRUE,
main = heatmap_title)
print(p)
dev.off()
# To avoid problems delay re-encoding of strings ----
options(stringsAsFactors = F)
rm(list=ls())
# load library
library(dplyr)
library(tidyr)
#library(readxl)
library(ggplot2)
library(ggrepel)
# load data info ----
gexpr = read.delim(file="3.2.table_diff_wilcoxon_R.txt", row.names=1, check.names = F)
colnames(gexpr)[5] <- "log2FoldChange"
colnames(gexpr)[6] <- "PValue"
# prepare data ----
de <- gexpr %>% select("log2FoldChange","PValue")
colnames(de) <- c("log2FoldChange","pvalue")
de$diffexpressed <- "NO"
de$diffexpressed[de$log2FoldChange > 1 & de$pvalue < 0.05] <- "UP"
de$diffexpressed[de$log2FoldChange < -1 & de$pvalue < 0.05] <- "DOWN"
de$gene_symbol <- rownames(de)
de$delabel <- NA
de$delabel[de$diffexpressed != "NO"] <- de$gene_symbol[de$diffexpressed != "NO"]
#colours <- setNames(c("cornflowerblue", "grey", "firebrick"), c(DOWN, NO, UP))
mycolors <- c("cornflowerblue", "grey", "firebrick")
names(mycolors) <- c("DOWN", "NO", "UP")
# pdf volcano ----
title <- "RNAseq R"
pdf(file="Fig5.2.volcano_R.pdf",width = 9, height = 6)
p <- ggplot(data=de,
aes(x=log2FoldChange,
y=-log10(pvalue),
col=diffexpressed,
label=delabel)) +
geom_point(size=1) +
theme_minimal() +
geom_label_repel()+
#data=dat, mapping = aes(x=dat[[x]],y=dat[[y]],label=SUBJID),
#segment.color = 'grey50',
#size = 2,
#fontface = 'bold',
#color = 'black',
#box.padding = unit(0.35, "lines"),
#point.padding = unit(0.5, "lines")) +
geom_vline(xintercept=c(-1, 1), col="red") +
geom_hline(yintercept=-log10(0.05), col="red") +
scale_color_manual(values=mycolors)+
labs(title = title)
print(p)
dev.off()
# To avoid problems delay re-encoding of strings ----
options(stringsAsFactors = F)
rm(list=ls())
# load library
library(dplyr)
library(tidyr)
library(readxl)
library(pheatmap)
library(RColorBrewer)
library(viridis)
# load data info ----
gexpr = read.delim(file="3.2.table_diff_wilcoxon_R.txt", row.names=1, check.names = F)
pdata <- read_excel("./../../../rawdata/groups.xlsx",sheet="Sheet4")
fdata <- read_excel("./../../../rawdata/CD73_Patient_Information.xlsx",sheet="Sheet3")
# data prepare ----
pdata <- pdata %>% filter(group=="Platinum-Resistance")
fdata <- fdata %>% filter(fdata$Patho_ID %in% pdata$Patho_ID)
fdata$id <- paste0(fdata$Group,fdata$ZY_ID)
fdata <- fdata[,c("id","Patho_ID","PFS","PDL1")]
pdata <- merge(fdata,pdata,by="Patho_ID")
df_pdata <- pdata[order(pdata$"CD73+"),]
df_pdata <- df_pdata[df_pdata$id %in% colnames(gexpr),]
df_pdata[is.na(df_pdata)] <- "NA"
rownames(df_pdata) <- df_pdata$id
# gexp data
# gexpr = gexpr[rowSums(gexpr)>0,] # remove non exp genes
DEG_up <- gexpr %>%
filter(wilcox.pval<=0.05) %>%
filter(lg2FC>5)
DEG_down <- gexpr %>%
filter(wilcox.pval<=0.05) %>%
filter(lg2FC<(-5))
df_gexpr <- rbind(DEG_up,DEG_down)
mat <- df_gexpr[,c(8:21)]
#rm(ls=gexpr)
#rm(ls=df_gexpr)
rm(ls=pdata)
rm(ls=fdata)
# plot heatmap ----
# anno ----
sample_anno <- df_pdata %>% select("PFS","PDL1","CD73+")
#sample_anno <- as.data.frame(unclass(sample_anno),stringsAsFactors=TRUE)
str(sample_anno)
gene_anno <- df_gexpr %>% select(lg2FC)
# anno_cols <- list(
#   PFS = viridis(12),#inferno(20),
#   PDL1 = c(`P` = "tomato",`N` = "grey", `NA`= "white"),
#   `CD73+`= c(`Y` = "tomato", `N`="grey"),
#   #rvals = viridis(12),
#   lg2FC = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(24)
# )
anno_cols <- list(
PFS = colorRampPalette(c("navy", "white", "gold"))(24),#viridis(12),#inferno(20),
PDL1 = c(`P` = "limegreen",`N` = "white", `NA` = "white"),
`CD73+`= c(`Y` = "limegreen", `N`="white"),
lg2FC = colorRampPalette(c("navy", "white", "gold"))(25)
#nanostring= c(`Yes` = "limegreen", `NA`="white")
)
table(sample_anno$PFS)
table(sample_anno$PDL1)
table(gene_anno$lg2FC)
# pdf heatmap ----
# all sample ----
heatmap_title <- "RNAseq Platinum-Resistance samples (wilcox.pval<=0.05 & lg2FC>4 | lg2FC<(-4))"
# pdf heatmap ----
# all sample ----
heatmap_title <- "RNAseq Platinum-Resistance samples (wilcox.pval<=0.05 & lg2FC>5 | lg2FC<(-5))"
pdf(file="Fig4.2.heatmap_R.pdf",width = 9, height = 15)
p <- pheatmap(log2(mat+1),
scale = "row",
breaks=seq(-2,2,length.out=25),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(24),#viridis(10),#inferno(10),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(24),
color = colorRampPalette(c("navy", "white", "yellow"))(25),
# color = colorRampPalette(c("#2E9FDF", "white", "#E7B800"))(25),
border_color = NA,
show_rownames = T,
cluster_rows = T,
cutree_rows = 2,
cluster_cols = T,
cutree_cols = 2,
clustering_distance_rows = "euclidean",
#  correlation #"euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
clustering_distance_cols = "euclidean",
clustering_method = "ward.D2",
#  #"complete", 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' or 'centroid'
annotation_col = sample_anno,
annotation_colors = anno_cols,
annotation_row = gene_anno,
#  #drop_levels = TRUE,
main = heatmap_title)
print(p)
dev.off()
pdf(file="Fig4.2.heatmap_R.pdf",width = 9, height = 9)
p <- pheatmap(log2(mat+1),
scale = "row",
breaks=seq(-2,2,length.out=25),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(24),#viridis(10),#inferno(10),
#color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(24),
color = colorRampPalette(c("navy", "white", "yellow"))(25),
# color = colorRampPalette(c("#2E9FDF", "white", "#E7B800"))(25),
border_color = NA,
show_rownames = T,
cluster_rows = T,
cutree_rows = 2,
cluster_cols = T,
cutree_cols = 2,
clustering_distance_rows = "euclidean",
#  correlation #"euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
clustering_distance_cols = "euclidean",
clustering_method = "ward.D2",
#  #"complete", 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' or 'centroid'
annotation_col = sample_anno,
annotation_colors = anno_cols,
annotation_row = gene_anno,
#  #drop_levels = TRUE,
main = heatmap_title)
print(p)
dev.off()
# source("https://bioconductor.org/biocLite.R")
BiocManager::install("gage")
library("pathview")
library("gage")
library("gageData")
library("dplyr")
# To avoid problems delay re-encoding of strings ----
options(stringsAsFactors = F)
rm(list=ls())
# load library
library(dplyr)
library(tidyr)
#library(readxl)
library(ggplot2)
library(clusterProfiler)
library("org.Hs.eg.db")
library(enrichplot)
library(DOSE)
library(viridis)
library(RColorBrewer)
setwd("~/Desktop/IMAB/6.OV_rnaseq/analysis/20220928/3.RNAseq_RvsS")
setwd("~/Desktop/IMAB/6.OV_rnaseq/analysis/20220928/3.RNAseq")
# load data info ----
gexpr = read.delim(file="3.2.table_diff_wilcoxon_R.txt", row.names=1, check.names = F)
colnames(gexpr)[5] <- "log2FoldChange"
colnames(gexpr)[6] <- "pvalue"
View(gexpr)
# prepare data ----
de <- gexpr %>% dplyr::select("log2FoldChange","pvalue")
de$diffexpressed <- "NO"
de$diffexpressed[de$log2FoldChange > 1 & de$pvalue < 0.05] <- "UP"
de$diffexpressed[de$log2FoldChange < -1 & de$pvalue < 0.05] <- "DOWN"
de$SYMBOL <- rownames(de)
de$delabel <- NA
de$delabel[de$diffexpressed != "NO"] <- de$SYMBOL[de$diffexpressed != "NO"]
table(de$diffexpressed)
# plot ----
# up
sig_RNA <- de %>%
filter(diffexpressed == "UP") %>%
as.data.frame() %>%
dplyr::select(SYMBOL)
gene.df <- bitr(sig_RNA$SYMBOL,
fromType = "SYMBOL",
toType = c("ENTREZID"),
OrgDb = org.Hs.eg.db)
sig_RNA <- merge(sig_RNA,gene.df,by="SYMBOL",all=TRUE)
gene <- sig_RNA$ENTREZID
# kegg ----
kk <- enrichKEGG(gene = gene,
organism = "hsa",
pvalueCutoff =0.05,
qvalueCutoff =1,
pAdjustMethod = "none")
outkk <- DOSE::setReadable(kk,OrgDb = "org.Hs.eg.db",keyType = "ENTREZID")
outkegg <- outkk@result
outfile="6.2.1.KEGG.up.R.txt"
write.table(outkegg, file=outfile, sep="\t", row.name=FALSE, col.names=TRUE, quote=FALSE)
pdf(file="Fig6.2.1.Kegg.dot.up.R.pdf",width = 9, height = 6)
dotplot(kk, showCategory = 20) #+ scale_color_gradient(low="purple", high="gold")#scale_color_viridis()
dev.off()
pdf(file="Fig6.2.1.Kegg.bar.up.R.pdf",width = 9, height = 6)
barplot(kk, showCategory = 20) #+ scale_color_gradient(low="purple", high="gold")#scale_color_viridis()
dev.off()
# plot ----
# down
sig_RNA <- de %>%
filter(diffexpressed == "DOWN") %>%
as.data.frame() %>%
dplyr::select(SYMBOL)
gene.df <- bitr(sig_RNA$SYMBOL,
fromType = "SYMBOL",
toType = c("ENTREZID"),
OrgDb = org.Hs.eg.db)
sig_RNA <- merge(sig_RNA,gene.df,by="SYMBOL",all=TRUE)
gene <- sig_RNA$ENTREZID
# kegg ----
kk <- enrichKEGG(gene = gene,
organism = "hsa",
pvalueCutoff =0.05,
qvalueCutoff =1,
pAdjustMethod = "none")
outkk <- DOSE::setReadable(kk,OrgDb = "org.Hs.eg.db",keyType = "ENTREZID")
outkegg <- outkk@result
outfile="6.2.2.KEGG.down.R.txt"
write.table(outkegg, file=outfile, sep="\t", row.name=FALSE, col.names=TRUE, quote=FALSE)
pdf(file="Fig6.2.2.Kegg.dot.down.R.pdf",width = 9, height = 6)
dotplot(kk, showCategory = 20)
dev.off()
pdf(file="Fig6.2.2.Kegg.bar.down.R.pdf",width = 9, height = 6)
barplot(kk, showCategory = 20)
dev.off()
shiny::runApp('Documents/work/3.GBY/project/4_drugscreen/viz/rshiny')
library(tidyverse)
library(ggrepel)
rstring <- function(n = 5000) {
a <- do.call(paste0, replicate(5, sample(LETTERS, n, TRUE), FALSE))
paste0(a, sprintf("%04d", sample(9999, n, TRUE)), sample(LETTERS, n, TRUE))
}
plotdat <- data.frame(x = rnorm(100),
y = -log10(runif(100, 0, 1)),
label = rstring(100),
cond = rep(c("ALL","AML","CLL","DLBCL"),each = 25))
# method 1 - faceting
ggplot(plotdat, aes(x = x, y = y, col = cond, label = label)) +
geom_point(size = 1.5) +
geom_text_repel(data = filter(plotdat, y > -log10(0.05)), size = 2) + # only label significant points
facet_wrap(~cond) + # facet wrapping - puts each condition in separate plot
scale_x_continuous(limits = c(-3,3), name = "Fold Change (log2)") + # make x limits equal and relabel
scale_y_continuous(name = "Significance (-log10 p-value)") + # relabel y
scale_color_manual(values = c("grey20","steelblue","firebrick","goldenrod")) + # change colours
theme_bw(base_size = 14) + # general styling
theme(panel.grid = element_blank(), # remove grid lines
strip.background = element_blank(),
legend.position = "none") # remove grey background on facet labels
library(pheatmap)
library(viridis)
options(stringsAsFactors = F)
mat <- matrix(rnorm(1000), ncol = 10)
colnames(mat) <- paste0("Sample ", 1:10)
rownames(mat) <- paste0("Gene ", 1:nrow(mat))
sample_anno <- data.frame(row.names = colnames(mat),
"Disease" = c(rep("ALL",3),
rep("AML",4),
rep("CLL",3)),
"Age" = 1:10,
"Sex" = rep(c("M","F"), each = 5))
anno_cols <- list(Sex = c(M = "steelblue3", F = "firebrick3"),
Disease = c(ALL = "#782121ff",
AML = "#f4d7d7ff",
CLL = "#de8787ff"))
gene_anno <- data.frame(row.names = row.names(mat),
"GO" = sample(c("DNA damage","Transcription","Cell cycle"), nrow(mat), replace = T))
pheatmap(mat,
scale = "row",
color = viridis(10),
show_rownames = F,
cluster_rows = T,
cutree_rows = 2,
annotation_col = sample_anno,
annotation_colors = anno_cols,
annotation_row = gene_anno)
shiny::runApp('Documents/GitHub/shiny')
install.packages("RCircos")
setwd("~/Documents/GitHub/shiny")
runApp()
install.packages("e1071")
runApp()
install.packages("preprocessCore")
runApp()
install.packages("preprocessCore")
BiocManager::install("preprocessCore")
runApp()
